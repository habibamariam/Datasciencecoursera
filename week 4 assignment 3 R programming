best<-function(state,outcome){
  data=read.csv("D:/Coursera-R Programming/week 4 assignment/rprog%2Fdata%2FProgAssignment3-data/outcome-of-care-measures.csv",colClasses = "character")
  fd<-as.data.frame(cbind(data[,2),data[,7],data[,11],data[,17],data[,23]),stringsAsFactors=FALSE)
  colnames(fd)<-c("hospital","state","heart attack","heart failure","pneumonia")
if(!state%in%fd[,"state"]){
  stop('inva;id state')
} else if(!outcome%in%c("heart attack","heart failure","pneumonia")){
  stop('invalid outcome')
} else{
  si<-which(fd[,"state"]==state)
  ts<-fd[si,]
  oi<-as.numeric(ts[,eval(outcome)])
  min_val<-min(oi,na.rm = TRUE)
  result<-ts[,"hospital"][which(oi==min_val)]
  output<-result[order(result)]
}
return(output)
}




rankhospital <- function(state, outcome, num = "best") {
  ## Read outcome data
  data <- read.csv("D:/Coursera-R Programming/week 4 assignment/rprog%2Fdata%2FProgAssignment3-data/outcome-of-care-measures.csv")
  
  ## Check that state and outcome are valid
  states <- levels(data[, 7])[data[, 7]]
  state_flag <- FALSE
  for (i in 1:length(states)) {
    if (state == states[i]) {
      state_flag <- TRUE
    }
  }
  if (!state_flag) {
    stop ("invalid state")
  } 
  if (!((outcome == "heart attack") | (outcome == "heart failure")
        | (outcome == "pneumonia"))) {
    stop ("invalid outcome")
  }
  
  ## Return hospital name in that state with the given rank 30-day death 
  ## rate
  col <- if (outcome == "heart attack") {
    11
  } else if (outcome == "heart failure") {
    17
  } else {
    23
  }
  
  data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
  data[, 2] <- as.character(data[, 2])
  statedata <- data[grep(state, data$State), ]
  orderdata <- statedata[order(statedata[, col], statedata[, 2], na.last = NA), ]
  if(num == "best") {
    orderdata[1, 2]
  } else if(num == "worst") {
    orderdata[nrow(orderdata), 2]
  } else{
    orderdata[num, 2]
  }
}






rankall <- function(outcome, num = "best") {
  ## Read outcome data
  data <- read.csv("D:/Coursera-R Programming/week 4 assignment/rprog%2Fdata%2FProgAssignment3-data/outcome-of-care-measures.csv")
  
  ## Check that outcome is valid
  if (!((outcome == "heart attack") | (outcome == "heart failure")
        | (outcome == "pneumonia"))) {
    stop ("invalid outcome")
  }
  
  ## For each state, find the hospital of the given rank
  col <- if (outcome == "heart attack") {
    11
  } else if (outcome == "heart failure") {
    17
  } else {
    23
  }
  
  data[, col] <- suppressWarnings(as.numeric(levels(data[, col])[data[, col]]))
  data[, 2] <- as.character(data[, 2])
  
  # Generate an empty vector that will be filled later, row by row, to 
  # generate the final output.
  output <- vector()
  
  states <- levels(data[, 7])
  
  for(i in 1:length(states)) {
    statedata <- data[grep(states[i], data$State), ]
    orderdata <- statedata[order(statedata[, col], statedata[, 2], 
                                 na.last = NA), ]
    hospital <- if(num == "best") {
      orderdata[1, 2]
    } else if(num == "worst") {
      orderdata[nrow(orderdata), 2]
    } else{
      orderdata[num, 2]
    }
    output <- append(output, c(hospital, states[i]))
  }
  
  ## Return a data frame with the hospital names and the (abbreviated) 
  ## state name
  output <- as.data.frame(matrix(output, length(states), 2, byrow = TRUE))
  colnames(output) <- c("hospital", "state")
  rownames(output) <- states
  
  output
  
  
